The project was developed using a modular and iterative approach, with clear separation between data handling, trading logic, portfolio management, and the user interface. Historical stock price data was used to simulate live trading feeds, allowing strategies to be tested in real time without the risk of connecting to an actual exchange. A strong focus was placed on creating a user-friendly and interactive dashboard where trading performance and portfolio updates could be monitored continuously.
  The simulation was built in Python, with pandas for data manipulation and strategy calculations, and Streamlit for developing an interactive dashboard. Streamlit provided a simple yet powerful way to visualize stock price trends, indicators, and portfolio performance in real time. Supporting scripts were used for managing connections, saving states, and preparing datasets, ensuring the system remained modular and easy to extend.
  One of the key challenges was implementing and fine-tuning the RSI (Relative Strength Index) strategy. Designing entry and exit signals based on RSI thresholds required careful parameter tuning to balance between overfitting and realistic performance. Another challenge was ensuring that the simulated environment mimicked the feel of live trading, particularly in synchronizing price feeds with portfolio updates. Through this project, I learned how technical indicators like RSI can guide trading strategies, how to visualize them effectively using Streamlit, and the importance of modular design for iterative experimentation. The experience provided valuable insights into quantitative trading and reinforced the significance of clear data pipelines and user-friendly visual interfaces.
